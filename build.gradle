group 'jnonino.devops.jenkins'
version '1.0-SNAPSHOT'

task wrapper(type: Wrapper) {
    gradleVersion = '4.4.1'
}

apply plugin: 'groovy'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
    maven { url 'http://repo.jenkins-ci.org/releases/' }
    jcenter()
}

configurations {
    testPlugins {}
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.11'
    compile "org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}"
    compile "org.jenkins-ci.main:jenkins-core:${jenkinsVersion}"

    // JUnit
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // Spock dependencies
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:2.2.2'

    // Jenkins test harness dependencies
    testCompile ('org.jenkins-ci.main:jenkins-test-harness:2.33') {
        exclude(module: 'org-netbeans-insane')
    }
    testCompile "org.jenkins-ci.main:jenkins-core:${jenkinsVersion}"
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}"

    // Job DSL plugin including plugin dependencies
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
    testCompile 'org.jenkins-ci.plugins:structs:1.10@jar'

    // Plugins to install in test instance
    // Job Configurations
    testPlugins group: 'org.jenkins-ci.plugins', name: 'job-dsl', version: "${jobDslVersion}"
    //testPlugins group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-aggregator', version: '2.5'
    testPlugins group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-multibranch', version: '2.16'
    // SCM
    testPlugins group: 'org.jenkins-ci.plugins', name: 'git', version: '3.3.0'
    // Build Tools
    testPlugins group: 'org.jenkins-ci.main', name: 'maven-plugin', version: '2.15.1'
    testPlugins group: 'org.jenkins-ci.plugins', name: 'gradle', version: '1.26'
    // Static Analysis
    testPlugins group: 'org.jvnet.hudson.plugins', name: 'checkstyle', version: '3.48'
    testPlugins group: 'org.jvnet.hudson.plugins', name: 'pmd', version: '3.47'
    testPlugins group: 'org.jvnet.hudson.plugins', name: 'findbugs', version: '4.70'
    testPlugins group: 'org.jvnet.hudson.plugins', name: 'tasks', version: '4.51'
    // Test
    testPlugins group: 'org.jenkins-ci.plugins', name: 'jacoco', version: '2.2.1'
    testPlugins group: 'org.jenkins-ci.plugins', name: 'cobertura', version: '1.10'
    // Views
    testPlugins group: 'org.jenkins-ci.plugins', name: 'nested-view', version: '1.14'
    // Jenkins Settings
    testPlugins group: 'org.jenkins-ci.plugins', name: 'greenballs', version: '1.15'
    testPlugins group: 'org.jenkins-ci.plugins', name: 'ci-game', version: '1.26'
    testPlugins group: 'org.jenkins-ci.plugins', name: 'emotional-jenkins-plugin', version: '1.2'
}

sourceSets {
    jobs {
        groovy {
            srcDirs 'jobs'
        }
    }
}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'
    def mapping = [:]
    doFirst {
        configurations.testPlugins.resolvedConfiguration.resolvedArtifacts.each {
            mapping[it.file.name] = "${it.name}.${it.extension}"
        }
    }
    rename { mapping[it] }
    doLast {
        List<String> baseNames = source*.name.collect { mapping[it] }.collect { it[0..it.lastIndexOf('.') - 1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
    ignoreFailures true
    dependsOn tasks.resolveTestPlugins
    inputs.files sourceSets.jobs.groovy.srcDirs
    systemProperty 'buildDirectory', project.buildDir.absolutePath
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate JaCoCo coverage reports after running tests."
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}